pipeline {
    agent {
        kubernetes {
            inheritFrom 'jenkins-jenkins-agent'
            idleMinutes 5
            yaml '''
              apiVersion: v1
              kind: Pod
              spec:
                restartPolicy: Never
                containers:
                  - name: kbctl-helm
                    image: aksacrops.azurecr.io/kbctl-helm:v1
                    command: ["tail", "-f", "/dev/null"]
                    imagePullPolicy: Always
                    securityContext:
                      privileged: true                      
            '''
            defaultContainer 'jnlp'
        }
    }
    environment {
        APP_REPO_NAME = 'microservices-calculator-2'
    }    
    stages {
        stage('APP Details') {
            steps {
              sh "git clone https://github.com/manikcloud/${env.APP_REPO_NAME}.git"
            }
        }        
        stage('App Image Selection') {
            steps {
                container('kbctl-helm') {
                    dir("${WORKSPACE}/${env.APP_REPO_NAME}/") {
                        script {
                            env.APP_NAME = sh(script: 'cat pom.xml | xq -x //artifactId | head -1', returnStdout: true).trim()
                            env.ENVIRONMENT = 'prd'
                            env.APP_VERSION = sh(script: 'cat pom.xml | xq -x //version | head -1', returnStdout: true).trim()
                            env.IMAGE_NAME = "${env.ENVIRONMENT}-${env.APP_NAME}:${env.APP_VERSION}"
                            echo "${env.IMAGE_NAME}"
                            // env.DOCKER_TAG = sh(script: 'git log --format="%h" -n 1', returnStdout: true).trim()
                            env.DOCKER_IMAGE = "aksacrapp.azurecr.io/${env.IMAGE_NAME}"
                        }
                    }
                }
            }
        }

        stage('APP Deploymentto AKS') {
            steps {
                container('kbctl-helm') {
                    sh "helm upgrade --install ${env.ENVIRONMENT}-${env.APP_NAME} golden-chart/ -n ${env.ENVIRONMENT}-${env.APP_NAME} -f  ${env.ENVIRONMENT}/${env.APP_NAME}/values.yaml --set=image.name=${env.ENVIRONMENT}-${env.APP_NAME} --set=image.tag=${env.APP_VERSION} --create-namespace"
                    sh "helm ls -A"
                }
            }
        }
    }
}
